@page "/viewApp/{AppId:int}"
@attribute [StreamRendering]
@inject DogService DogService
@inject NavigationManager Navigation

<PageTitle>Dog</PageTitle>


@if (dog != null)
{
    <div style="background-color: #EEEEEE;margin: 15px;line-height: 1.5">
        @if (!string.IsNullOrEmpty(dog.ImagePath))
        {
            <img src="@dog.ImagePath" alt="Dog Image" width="200" />
        }
        <p>Name: @dog.Name</p>
        <p>Breed: @dog.Breed</p>
        <p>Birthdate: @dog.Birthdate.ToShortDateString()</p>
        <p>Description: @dog.Description</p>
        <p>Cost: @dog.Cost</p>
        <p>Shelter ID: @dog.ShelterID</p>
        <p>Sex: @dog.Sex</p>
        <p>Arrived at Shelter: @dog.DateAdded</p>
        <p>Age: @dog.GetAgeInDays().ToString() days</p>
        <p>Size: @dog.SizeLbs</p>
        <p>Adoption Status: @dog.AdoptionStatus</p>
        <p>Health Info: @dog.HealthInfo</p>
    </div>

    <div>
        Apply for Adoption?
        <button @onclick="() => ApplyForAdoption(dog.ID)">View Details</button>
    </div>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter] public int dogId { get; set; }  // Get the dog ID from the URL

    private Dog dog = new Dog();

    private void ApplyForAdoption(int dogId)
    {
        if ((dog.AdoptionStatus != "Pending") && (dog.AdoptionStatus != "Adopted"))
        {
            Navigation.NavigateTo($"/viewDog/{dogId}/apply");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        dog = DogService.GetDogList().FirstOrDefault(d => d.ID == dogId);  // Fetch dog data using the ID
    }
}


